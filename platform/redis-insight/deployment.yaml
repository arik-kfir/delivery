apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: redis-insight
  name: redis-insight
  namespace: redis-insight
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-insight
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-insight
    spec:
      enableServiceLinks: false
      initContainers:
        - name: init
          image: busybox
          command:
            - /bin/sh
            - '-c'
            - chown -R 1001 /db
          volumeMounts:
            - name: db
              mountPath: /db
      containers:
        - image: redislabs/redisinsight:1.13.1
          name: redis-insight
          env:
            - name: RITRUSTEDORIGINS
              value: https://redis.kfirs.com
          ports:
            - containerPort: 8001
              name: http
          livenessProbe:
            httpGet:
              port: http
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck/
              port: http
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 5
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          volumeMounts:
            - mountPath: /db
              name: db
              readOnly: false
      nodeSelector:
        gke.kfirs.com/purpose: workloads
      tolerations:
        - key: gke.kfirs.com/purpose
          operator: Equal
          value: workloads
          effect: NoExecute
      serviceAccountName: redis-insight
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: redis-insight
            readOnly: false
