apiVersion: apps/v1
kind: Deployment
metadata:
  name: greenstar-redis
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: greenstar
      app.kubernetes.io/component: redis
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: greenstar
        app.kubernetes.io/component: redis
    spec:
      containers:
        - image: redis/redis-stack-server:7.0.6-RC8
          name: redis
          ports:
            - containerPort: 6379
              name: client
          startupProbe:
            exec:
              command:
                - bash
                - -c
                - '[[ "$(redis-cli PING)" == "PONG" ]]'
            failureThreshold: 30
            periodSeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - '[[ "$(redis-cli PING)" == "PONG" ]]'
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - '[[ "$(redis-cli PING)" == "PONG" ]]'
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 64Mi
            requests:
              cpu: 100m
              memory: 64Mi
          volumeMounts:
            - mountPath: /data
              name: data
              readOnly: false
      nodeSelector:
        gke.kfirs.com/purpose: workloads
      tolerations:
        - key: gke.kfirs.com/purpose
          operator: Equal
          value: workloads
          effect: NoExecute
      serviceAccountName: greenstar-redis
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: redis
            readOnly: false
